trigger: 
  - 'master'
variables:
  buildConfiguration: 'Release'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  leaderboardRepository: 'leaderboard'
  imagePullSecret: 'secret'
  ACR: 'acrjgntokiota.azurecr.io'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in deployment.yaml'
      inputs:
        rootDirectory: '$(build.sourcesdirectory)/manifests'
        targetFiles: deployment.yml
        escapeType: none
        tokenPrefix: '__'
        tokenSuffix: '__'
    
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)

    - task: Docker@2
      displayName: 'Build and push the leaderboard image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(leaderboardRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.LeaderboardContainer/Dockerfile'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)
    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests

- stage: 'Deploy'
  displayName: 'Deploy the containers'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: 'spike'
    variables:
    - group: Release
    strategy:
     runOnce:
        deploy:
          steps:
            - download: current
              artifact: manifests
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: 'Container Registry Connection'
                kubernetesServiceConnection: 'spike-gamespace-dev-1597244200592'
                namespace: 'gamespace-dev'
            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                kubernetesServiceConnection: 'spike-gamespace-dev-1597244200592'
                namespace: 'default'
                manifests: |
                  $(Pipeline.Workspace)/manifests/deployment.yml
                  $(Pipeline.Workspace)/manifests/service.yml
                imagePullSecrets: |
                  $(imagePullSecret)
                containers: |
                  $(ACR)/$(webRepository):$(tag)
                  $(ACR)/$(leaderboardRepository):$(tag)